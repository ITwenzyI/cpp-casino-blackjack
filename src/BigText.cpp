#include "BigText.h"
#include <iostream>
#include <map>
#include <vector>
#include <cctype>

#include <map>
#include <string>
#include <vector>

std::map<char, std::vector<std::string>> bigFont = {
    {'A', {
        "    _    ",
        "   / \\   ",
        "  / _ \\  ",
        " / ___ \\ ",
        "/_/   \\_\\",
        "         ",
    }},
    {'B', {
        " ____  ",
        "| __ ) ",
        "|  _ \\ ",
        "| |_) |",
        "|____/ ",
        "       ",
    }},
    {'C', {
        "  ____ ",
        " / ___|",
        "| |    ",
        "| |___ ",
        " \\____|",
        "       ",
    }},
    {'D', {
        " ____  ",
        "|  _ \\ ",
        "| | | |",
        "| |_| |",
        "|____/ ",
        "       ",
    }},
    {'E', {
        " _____ ",
        "| ____|",
        "|  _|  ",
        "| |___ ",
        "|_____|",
        "       ",
    }},
    {'F', {
        " _____ ",
        "|  ___|",
        "| |_   ",
        "|  _|  ",
        "|_|    ",
        "       ",
    }},
    {'G', {
        "  ____ ",
        " / ___|",
        "| |  _ ",
        "| |_| |",
        " \\____|",
        "       ",
    }},
    {'H', {
        " _   _ ",
        "| | | |",
        "| |_| |",
        "|  _  |",
        "|_| |_|",
        "       ",
    }},
    {'I', {
        " ___ ",
        "|_ _|",
        " | | ",
        " | | ",
        "|___|",
        "     ",
    }},
    {'J', {
        "     _ ",
        "    | |",
        " _  | |",
        "| |_| |",
        " \\___/ ",
        "       ",
    }},
    {'K', {
        " _  __",
        "| |/ /",
        "| ' / ",
        "| . \\ ",
        "|_|\\_\\",
        "      ",
    }},
    {'L', {
        " _     ",
        "| |    ",
        "| |    ",
        "| |___ ",
        "|_____|",
        "       ",
    }},
    {'M', {
        " __  __ ",
        "|  \\/  |",
        "| |\\/| |",
        "| |  | |",
        "|_|  |_|",
        "        ",
    }},
    {'N', {
        " _   _ ",
        "| \\ | |",
        "|  \\| |",
        "| |\\  |",
        "|_| \\_|",
        "       ",
    }},
    {'O', {
        "  ___  ",
        " / _ \\ ",
        "| | | |",
        "| |_| |",
        " \\___/ ",
        "       ",
    }},
    {'P', {
        " ____  ",
        "|  _ \\ ",
        "| |_) |",
        "|  __/ ",
        "|_|    ",
        "       ",
    }},
    {'Q', {
        "  ___  ",
        " / _ \\ ",
        "| | | |",
        "| |_| |",
        " \\__\\_\\",
        "       ",
    }},
    {'R', {
        " ____  ",
        "|  _ \\ ",
        "| |_) |",
        "|  _ < ",
        "|_| \\_\\",
        "       ",
    }},
    {'S', {
        " ____  ",
        "/ ___| ",
        "\\___ \\ ",
        " ___) |",
        "|____/ ",
        "       ",
    }},
    {'T', {
        " _____ ",
        "|_   _|",
        "  | |  ",
        "  | |  ",
        "  |_|  ",
        "       ",
    }},
    {'U', {
        " _   _ ",
        "| | | |",
        "| | | |",
        "| |_| |",
        " \\___/ ",
        "       ",
    }},
    {'V', {
        "__     __",
        "\\ \\   / /",
        " \\ \\ / / ",
        "  \\ V /  ",
        "   \\_/   ",
        "         ",
    }},
    {'W', {
        "__        __",
        "\\ \\      / /",
        " \\ \\ /\\ / / ",
        "  \\ V  V /  ",
        "   \\_/\\_/   ",
        "            ",
    }},
    {'X', {
        "__  __",
        "\\ \\/ /",
        " >  < ",
        "/_/\\_\\",
        "      ",
        "      ",
    }},
    {'Y', {
        "__   __",
        "\\ \\ / /",
        " \\ V / ",
        "  | |  ",
        "  |_|  ",
        "       ",
    }},
    {'Z', {
        " _____",
        "|__  /",
        "  / / ",
        " / /_ ",
        "/____|",
        "      ",
    }},
    {'0', {
        "  ___  ",
        " / _ \\ ",
        "| | | |",
        "| | | |",
        "| |_| |",
        " \\___/ ",
    }},
    {'1', {
        " __ ",
        "/_ |",
        " | |",
        " | |",
        " | |",
        " |_|",
    }},
    {'2', {
        " ___  ",
        "|__ \\ ",
        "   ) |",
        "  / / ",
        " / /_ ",
        "|____|",
    }},
    {'3', {
        " ____  ",
        "|___ \\ ",
        "  __) |",
        " |__ < ",
        " ___) |",
        "|____/ ",
    }},
    {'4', {
        " _  _   ",
        "| || |  ",
        "| || |_ ",
        "|__   _|",
        "   | |  ",
        "   |_|  ",
    }},
    {'5', {
        " _____ ",
        "| ____|",
        "| |__  ",
        "|___ \\ ",
        " ___) |",
        "|____/ ",
    }},
    {'6', {
        "   __  ",
        "  / /  ",
        " / /_  ",
        "| '_ \\ ",
        "| (_) |",
        " \\___/ ",
    }},
    {'7', {
        " ______",
        "|____  |",
        "    / / ",
        "   / /  ",
        "  / /   ",
        " /_/    ",
    }},
    {'8', {
        "  ___  ",
        " ( _ ) ",
        " / _ \\ ",
        "| (_) |",
        " \\__, |",
        " |___/ ",
    }},
    {'9', {
        "  ___  ",
        " / _ \\ ",
        "| (_) |",
        " \\__, |",
        "   / / ",
        "  /_/  ",
    }},
{' ', {
    "       ",
    "       ",
    "       ",
    "       ",
    "       ",
    "       ",
}},
};

void printBigText(const std::string& text) {
    if (bigFont.empty()) return;

    size_t maxLines = bigFont.begin()->second.size();
    for (size_t line = 0; line < maxLines; ++line) {
        for (char c : text) {
            c = std::toupper(c);
            if (bigFont.find(c) != bigFont.end()) {
                std::cout << bigFont[c][line] << " ";
            } else {
                std::cout << "???????? " << " "; // Platzhalter
            }
        }
        std::cout << std::endl;
    }
}

